--- a/components/ungoogled/memory/pattern_protection.h
+++ b/components/ungoogled/memory/pattern_protection.h
@@ -12,6 +12,38 @@ class MemoryPatternProtection {
 public:
     void InitializeProtection() {
         memory_engine_.InitializeBaseline();
+        
+        // Enhanced memory protection
+        memory_protector_.Initialize({
+            .heap_protection = {
+                .layout_randomization: true,
+                .allocation_patterns: {
+                    .randomize_sizes: true,
+                    .pad_allocations: true,
+                    .noise_level: 0.15  // 15% size variation
+                },
+                .deallocation_masking: {
+                    .delayed_free: true,
+                    .random_delay: {5, 20}  // ms
+                }
+            },
+            .stack_protection = {
+                .frame_randomization: true,
+                .canary_insertion: {
+                    .frequency: 0.2,    // 20% of frames
+                    .random_values: true
+                }
+            },
+            .pattern_masking = {
+                .memory_content: {
+                    .randomize_unused: true,
+                    .secure_wipe: true
+                },
+                .access_patterns: {
+                    .timing_randomization: true,
+                    .order_shuffling: true
+                }
+            }
+        });
     }
 };